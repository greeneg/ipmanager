{
    "swagger": "2.0",
    "info": {
        "description": "A simple API for managing networks",
        "title": "IpManager",
        "contact": {
            "name": "Gary Greene",
            "url": "https://github.com/greeneg/ipmanager"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.0.8"
    },
    "host": "localhost:8000",
    "basePath": "/api/v1",
    "paths": {
        "/domain": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Create a new domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Create a new domain",
                "parameters": [
                    {
                        "description": "Domain data",
                        "name": "domain",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Domain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/domain/id/{domainid}": {
            "get": {
                "description": "Retrieve a domain by Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Retrieve a domain by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain Id",
                        "name": "domainid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Domain"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/domain/name/{domainname}": {
            "get": {
                "description": "Retrieve a domain by DomainName",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Retrieve a domain by DomainName",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain name",
                        "name": "domainname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Domain"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/domain/{domainname}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete a domain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Delete a domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain name",
                        "name": "domainname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/domains": {
            "get": {
                "description": "Retrieve a list of domain",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "domain"
                ],
                "summary": "Retrieve a list of domain",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DomainList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/host": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new host",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "host"
                ],
                "summary": "Register host",
                "parameters": [
                    {
                        "description": "Host Data",
                        "name": "host",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Host"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/host/id/{hostid}": {
            "get": {
                "description": "Retrieve a host by its Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "host"
                ],
                "summary": "Retrieve a host by its Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "host Id",
                        "name": "hostid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Host"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/host/name/{hostname}": {
            "get": {
                "description": "Retrieve a host by its hostname",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "host"
                ],
                "summary": "Retrieve a host by its hostname",
                "parameters": [
                    {
                        "type": "string",
                        "description": "hostname",
                        "name": "hostname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Host"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/host/{hostname}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete a host",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "host"
                ],
                "summary": "Delete a host",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hostname",
                        "name": "hostname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Update MAC address list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "host"
                ],
                "summary": "Update MAC address list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hostname",
                        "name": "hostname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MAC address list",
                        "name": "updateMacAddresses",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MacAddressList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/hosts": {
            "get": {
                "description": "Retrieve list of all hosts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "host"
                ],
                "summary": "Retrieve list of all hosts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.HostList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/subnet": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new subnet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subnet"
                ],
                "summary": "Register subnet",
                "parameters": [
                    {
                        "description": "Subnet Data",
                        "name": "subnet",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Subnet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/subnet/id/{subnetname}": {
            "get": {
                "description": "Retrieve a subnet by its Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subnet"
                ],
                "summary": "Retrieve a subnet by its Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subnet Id",
                        "name": "subnetid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Subnet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/subnet/name/{subnetname}": {
            "get": {
                "description": "Retrieve a subnet by its network name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subnet"
                ],
                "summary": "Retrieve a subnet by its network name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subnet name",
                        "name": "subnetname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Subnet"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/subnet/{networkname}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete a subnet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subnet"
                ],
                "summary": "Delete subnet",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network name",
                        "name": "networkname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Change subnet network information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subnet"
                ],
                "summary": "Change subnet network information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Network name",
                        "name": "networkname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subnet data",
                        "name": "subnetUpdate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SubnetUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/subnets": {
            "get": {
                "description": "Retrieve list of all subnets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subnet"
                ],
                "summary": "Retrieve list of all subnets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Subnets"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/subnets/domain/id/{domainid}": {
            "get": {
                "description": "Retrieve a list of subnets assigned to a domain Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subnet"
                ],
                "summary": "Retrieve a list of subnets assigned to a domain Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain name",
                        "name": "domainname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Subnets"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/subnets/domain/name/{domainname}": {
            "get": {
                "description": "Retrieve a list of subnets assigned to a domain name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subnet"
                ],
                "summary": "Retrieve a list of subnets assigned to a domain name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Domain name",
                        "name": "domainname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Subnets"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/user": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Add a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ProposedUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/user/id/{id}": {
            "get": {
                "description": "Retrieve a user by their Id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Retrieve a user by their Id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SafeUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/user/name/{name}": {
            "get": {
                "description": "Retrieve a user by their UserName",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Retrieve a user by their UserName",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SafeUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/user/{name}": {
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Delete a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Change password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Change password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Password data",
                        "name": "changePassword",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PasswordChange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SuccessMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/user/{name}/status": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Retrieve a user's active status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Retrieve a user's active status. Can be either 'enabled' or 'locked'",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserStatusMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Set a user's active status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Set a user's active status. Can be either 'enabled' or 'locked'",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    },
                    {
                        "type": "string",
                        "description": "User name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserStatusMsg"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieve list of all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Retrieve list of all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UsersList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.FailureMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.SafeUser": {
            "type": "object",
            "properties": {
                "creationDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "userName": {
                    "type": "string"
                }
            }
        },
        "model.Domain": {
            "type": "object",
            "properties": {
                "CreationDate": {
                    "type": "string"
                },
                "CreatorId": {
                    "type": "integer"
                },
                "DomainName": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                }
            }
        },
        "model.DomainList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Domain"
                    }
                }
            }
        },
        "model.FailureMsg": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "model.Host": {
            "type": "object",
            "properties": {
                "CreationDate": {
                    "type": "string"
                },
                "CreatorId": {
                    "type": "integer"
                },
                "HostName": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "MacAddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.HostList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Host"
                    }
                }
            }
        },
        "model.MacAddressList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.PasswordChange": {
            "type": "object",
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                }
            }
        },
        "model.ProposedUser": {
            "type": "object",
            "properties": {
                "CreationDate": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "Password": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                }
            }
        },
        "model.Subnet": {
            "type": "object",
            "properties": {
                "BitMask": {
                    "type": "integer"
                },
                "CreationDate": {
                    "type": "string"
                },
                "CreatorId": {
                    "type": "integer"
                },
                "DomainId": {
                    "type": "integer"
                },
                "GatewayAddress": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "NetworkName": {
                    "type": "string"
                },
                "NetworkPrefix": {
                    "type": "string"
                }
            }
        },
        "model.SubnetUpdate": {
            "type": "object",
            "properties": {
                "BitMask": {
                    "type": "integer"
                },
                "DomainName": {
                    "type": "string"
                },
                "GatewayAddress": {
                    "type": "string"
                },
                "NetworkPrefix": {
                    "type": "string"
                }
            }
        },
        "model.Subnets": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Subnet"
                    }
                }
            }
        },
        "model.SuccessMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "properties": {
                "CreationDate": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer"
                },
                "LastChangedDate": {
                    "type": "string"
                },
                "PasswordHash": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                }
            }
        },
        "model.UserStatusMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "string"
                }
            }
        },
        "model.UsersList": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.User"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}